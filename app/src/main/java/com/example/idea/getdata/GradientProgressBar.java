package com.example.idea.getdata;import android.content.Context;import android.graphics.Canvas;import android.graphics.Color;import android.graphics.Paint;import android.util.AttributeSet;import android.view.View;/** * Created by WangChunLei on 2016.1.16 * e-mail:wcl_android@163.com */public class GradientProgressBar extends View { /*绘制圆周白色分割线的画笔*/ private Paint linePaint; private int[] curve_data = new int[2000]; private int curve_data_len = 0; private int curve_max=0;            // 画布最大表示的值 private int curve_min=0;            // 画布最小表示的值 private int curve_width=0;          // 画布宽度 private int curve_heigh=0;         // 画面高度 public GradientProgressBar(Context context) {  super(context);  init(); } public GradientProgressBar(Context context, AttributeSet attrs) {  super(context, attrs);  init(); } public GradientProgressBar(Context context, AttributeSet attrs, int defStyleAttr) {  super(context, attrs, defStyleAttr);  init(); } private void init() {  linePaint = new Paint();  linePaint.setColor(Color.GREEN);  linePaint.setStrokeWidth(2); } @Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {  int measureWidth = MeasureSpec.getSize(widthMeasureSpec);  int measureHeight = MeasureSpec.getSize(heightMeasureSpec);  setMeasuredDimension(Math.min(measureWidth, measureHeight), Math.min(measureWidth, measureHeight)); } @Override protected void onDraw(Canvas canvas) {  int max=0,min=0;  super.onDraw(canvas);  curve_width = getMeasuredWidth();  curve_heigh = getMeasuredHeight();  for (int i=0;i<curve_data_len;i++){   if (max<curve_data[i])    max = curve_data[i];   if (min>curve_data[i])    min = curve_data[i];  }  curve_max = max;  curve_min = min;  // 绘制栅格  canvas.drawColor(Color.BLACK);  linePaint.setColor(Color.GRAY);  for (int i=0;i<10;i++){   canvas.drawLine(0, curve_heigh*i/10, curve_width, curve_heigh*i/10, linePaint);   canvas.drawLine(curve_width*i/10,0,curve_width*i/10,curve_heigh,linePaint);  }  for (int i=0;i<curve_data_len;i++){   //curve_data[i] = -curve_data[i] + (int)(0.5*curve_heigh);   // 尺度转换   curve_data[i] = (curve_heigh - (curve_heigh*(curve_data[i]-curve_min)/(curve_max-curve_min)));  }  linePaint.setColor(Color.GREEN);  for (int i = 0; i < curve_data_len - 1; i++) {   canvas.drawLine(i, curve_data[i], i + 1, curve_data[i + 1], linePaint);  } } public void draw_curve(int draw_data[],int data_len){  for (int i=0;i<data_len;i++){   curve_data[i]= draw_data[i];  }  curve_data_len = data_len;  invalidate(); }}